---
# tasks file for runvm
- name: Create a new EC2 key
  amazon.aws.ec2_key:
    name: ec2conveer
    state: present
  register: ec2_key_result

- name: Save private key
  copy: content="{{ ec2_key_result.key.private_key }}" dest="./id_rsa" mode=0600
  when: ec2_key_result.changed

- name: Create security group
  amazon.aws.ec2_group:
    description: grant all to servers
    name: securitygroup
    state: present
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0

- name: Create EC2 instance for buildserver
  amazon.aws.ec2_instance:
    name: buildserver
    image_id: ami-0f7cd40eac2214b37
    instance_type: "t2.micro"
    key_name: ec2conveer
    security_group: securitygroup
    state: running
    network:
      assign_public_ip: yes
  register: buildserver_result

- name: Gather instances information
  ec2_instance_info:
    filters:
      "tag:Name": buildserver
  register: ec2_node_info

- name: Echo
  copy: content="{{ ec2_node_info }}" dest="./log.i"
  

- name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
  local_action: lineinfile 
                dest="./hosts" 
                insertafter="[build]"
                line="{{ buildserver_result['instances']['network_interfaces']['association']['public_ip'] }}"
                # line="{{ buildserver_result.instances.network_interfaces.association.public_ip }}"
  # with_items: "{{ ec2.instances }}"

- name: Create EC2 instance for webserver
  amazon.aws.ec2_instance:
    name: webserver
    image_id: ami-0f7cd40eac2214b37
    instance_type: "t2.micro"
    key_name: ec2conveer
    security_group: securitygroup
    state: running
    network:
      assign_public_ip: yes
  register: webserver_result
...